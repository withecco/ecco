services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: ecco-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ecco
      POSTGRES_USER: ecco
      POSTGRES_PASSWORD: ecco-dev-password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./packages/postgres/migrations:/docker-entrypoint-initdb.d
    networks:
      - ecco-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ecco -d ecco"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (for caching, sessions, queues)
  redis:
    image: redis:7-alpine
    container_name: ecco-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ecco-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Service (Development with hot reload)
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
      target: installer  # Stop at installer stage for development
    container_name: ecco-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://ecco:ecco-dev-password@postgres:5432/ecco
      - REDIS_URL=redis://redis:6379
      - PORT=3000
    volumes:
      # Mount source code for development hot reload
      - ./apps/api/src:/app/apps/api/src
      - ./packages:/app/packages
      # Exclude node_modules from bind mount
      - /app/node_modules
    networks:
      - ecco-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["bun", "--watch", "run", "apps/api/src/index.ts"]

  dbgate:
    image: dbgate/dbgate
    container_name: ecco-dbgate
    restart: unless-stopped
    ports:
      - 80:3000
    volumes:
      - dbgate_data:/root/.dbgate
    environment:
      CONNECTIONS: con1,con2
      LABEL_con1: Postgres
      SERVER_con1: postgres
      DB_con1: ecco
      USER_con1: ecco
      PASSWORD_con1: ecco-dev-password
      PORT_con1: 5432
      ENGINE_con1: postgres@dbgate-plugin-postgres
      LABEL_con2: SQLite
      FILE_con2: /home/jan/feeds.sqlite
      ENGINE_con2: sqlite@dbgate-plugin-sqlite
    networks:
      - ecco-network
    depends_on:
      postgres:
        condition: service_healthy

networks:
  ecco-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  dbgate_data:
    driver: local
